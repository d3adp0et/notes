Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-08-06T17:38:38-04:00

====== 4.3 Vulnerability Management Activities ======
Created Wednesday 06 August 2025

==== # Vulnerability Scan ====
	+ kinda pasive
	+ port scan
	+ indetify systems
	+ test from outside and inside
	+ lots of data - find useful ones

==== # Application Security ====
=== Static Code Analyzer ===
	+ see 4.1

=== Dynamic Analysis - Fuzzing ===
	+ send random input to an application
	+ Fault injecting, robustness testing, syntax testing, negative testing - other names
	+ may cause: application crash, server error, exceptions
	+ first fuzzer: 1988 class project at the University of Wisonsin
	+ "Operating System Utility Program Reliability" class
	+ Professor Barton Miller
	+ made The Fuzz Generator

=== Package Monitoring ===
	+ legitimacy: trusted src, no malware/embedded vuln
	+ test in a sandbox or a lab env

--------------------

==== # Threat Intelligence ====
	+ be up to date with new threat - to make decisions in future

=== OSINT - Open Source Intelligence ===
	+ internet
	+ govn data
	+ commercial data

=== Propritary / Third Party Intelligence ===
	+ some one else gives threat intelligence
	+ better service: analytics, correlation across different data srcs

=== Information sharing ===
	+ Eg: Cyber Threat Alliance (CTA)
		-+ Members upload specifically formatted threat intelligence
		-+ CTA scores each submission and vaidates across other submissions
		-+ Other members can extract the validated data
	+ Aunties of threat intelligence

=== Dark Web Intelligence ===

--------------------

==== # Penetration Testing ====
	+ NIST's techincal guide to information security testing and assessment 
	1. rules of engagement
	2. initial exploit
	3. lateral movement
	4. persistence
	5. the pivot

=== Bug Bounty Programs ===

--------------------

==== # Analysis ====
=== Confirmation ===
	+ False Positive
	+ False Negative

=== Priortize ===
	+ high, medium , low
	+ National vuln databse : nvd.nist.gov

=== CVSS ===
	+ Common Vulnerability Scoring System
	+ score: 0 to 10
	+ different scoring: CVSS 2.0 vs CVSS 3.x

=== CVE ===
	+ Common Vulnerabilities and Exposures
	+ but some vuln may not have a CVE associated with it

=== Vulnerability Classfiication ===
	+ Application Scans - desktop, mobile
	+ Web Application Scans
	+ Network Scans - misconfigured firewalls, open ports, vuln devices

=== Exposure Factor ===
	+ Eg: A small DDoS may limit access to a service half the time
		-+ 50% exposure factor
	+ Eg: A buffer overflow may completely disable a service
		-+ 100% exposure factor

=== Environmental Variables ===
	+ A vuln on a cloud infra accessed by many has higher priotity than a vuln on a single device in a lab.
	+ Env matters

=== Industry / Organizational impact ===
	+ attack on healthcare or power utilities have much more impact than a bakery shop

=== Risk Tolerance ===
	+ Sometimes let the risk be
	+ accept risk: cost of remediation > cost of risk

--------------------

==== # Vulnerability Response and Remediation ====
=== Patching ===
	+ Scheduled
	+ Unscheduled
	
=== Insurance ===
	+ Cybersecurity insurance coverage: Lost revenue, Data recovery costs, Money lost to phishing, Privacy lawsuit costs
	+ Doesn't cover everything: intentional act, funds transfer etc
	+ Good against ransomware

=== Segmentation ===
	+ limit the scope of a exploit
	+ airgaps
	+ use internal NGFW: block unwanted/unecessary traffic between VLANs
	+ Physical Segmentation: seperate switches/routers
	+ Logical Segmentation: VLANs

=== Compensating Control ===
	+ if not able to patch do something else to limit damage: disable service, revoke access etc
	+ provide coverage until patch

=== Exceptions and Exemption ===
	+ sometimes exceptions can be made
	+ Risk exists but there is a patch conflict and until this conflict is solved we can make an exception

--------------------

==== # Validation of Remediation ====
	+ was patch successful?
		1. Rescan: do vuln scan again
		2. Audit: check systems
		3. Verification: Manually confirm security

==== # Reporting ====
	+ no of identified vuln
	+ Systems patched vs unpatched
	+ new threat notification
	+ Errors, exceptions, and exemption
	+ be organized to manage everything nicely















	

